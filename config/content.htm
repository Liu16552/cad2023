<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite </a></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<p></p>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<h1>HW</h1>
<h2>作動</h2>
<p><img alt="" height="257" src="/images/998738e4-addc-4fc1-bd87-527830b2df91.gif" width="491"/></p>
<h2>ppt參考資料</h2>
<h3 class="fs-headline1 ow-break-word mb8 flex--item fl1" itemprop="name"><a class="question-hyperlink" href="https://physics.stackexchange.com/questions/708154/fake-perpetual-motion-device-using-an-electromagnet"><span>使用電磁體的假永動機</span></a></h3>
<p><span>我正在觀看其中一台假永動機的視頻，其中一個球掉進洞裡，然後從斜坡上飛回起始平台。</span></p>
<p><span><span>正如懷疑的那樣，大型基地隱藏著電磁體。</span><span>研究一個週期的幀，球似乎突然以一種意想不到的方式圍繞藍色箭頭指向的地方加速。</span></span></p>
<p><span><span>在這裡，軌道接觸地面，並且由於壓力感測器的原因，電磁鐵似乎在此時打開。</span><span>然而，我有點困惑磁鐵是如何加速球的，磁鐵能以這種方式「推動」球嗎？</span><span>如何克服摩擦引起的能量損失？</span></span></p>
<p><a href="https://i.stack.imgur.com/fAa1t.png" rel="nofollow noreferrer"><img alt="在此輸入影像描述" src="https://i.stack.imgur.com/fAa1t.png"/></a></p>
<p><a href="https://i.stack.imgur.com/fGf5q.png" rel="nofollow noreferrer"><img alt="在此輸入影像描述" src="https://i.stack.imgur.com/fGf5q.png"/></a></p>
<p><a href="https://i.stack.imgur.com/80jLS.png" rel="nofollow noreferrer"><img alt="在此輸入影像描述" src="https://i.stack.imgur.com/80jLS.png"/></a></p>
<p><span>另一種可行的方法是，當球穿過平台上的孔時，電磁體就會打開。</span><span>此電磁體會將球加速到斜坡底部，速度比重力更快。</span><span>在球到達坡道最低點之前，電磁體關閉，使球繼續繞著坡道的其餘部分發射回平台，並利用從球到達坡道時獲得的少量額外速度獲得的額外動量。電磁鐵被打開。</span></p>
<p><span><span>當您打開導電物體附近的磁場時，就會在物體中感應出</span><a href="https://en.wikipedia.org/wiki/Eddy_current#Repulsive_effects_and_levitation" rel="nofollow noreferrer"><span><span>渦流。</span></span></a><span><span>這反過來又產生了自己的磁場。</span><span>該場的極性與感應場的極性相反，因此產生排斥。</span></span></span></p>
<h3>This Is Not a Perpetual Motion Machine</h3>
<p><span>Drop a marble into the top of this tabletop sculpture, and it rolls down a ramp and back into itself endlessly. While it might appear to defy the laws of physics, the trick is that its base contains a hidden battery and electromagnet that accelerates the steel sphere as it comes down the ramp.</span></p>
<p><span><a href="https://www.youtube.com/watch?v=ToUKmZF4UKI">https://www.youtube.com/watch?v=ToUKmZF4UKI</a></span></p>
<p><a href="https://www.reddit.com/r/oddlysatisfying/comments/10nlzdo/fake_perpetual_motion_wsound/?rdt=61758">相關討論串</a></p>
<h3>作動解說</h3>
<div class="secondary-header cf" id="wd-secondary-header">
<div class="unbranded">
<div class="publication-name" id="wd-pub-name">
<div class="publication-title" itemid="periodical" itemprop="name"><a href="https://iopscience.iop.org/journal/1757-899X" itemprop="url">IOP Conference Series: Materials Science and Engineering</a></div>
</div>
</div>
</div>
<div class="da1-da2" id="page-content" itemscope="" itemtype="http://schema.org/ScholarlyArticle">
<div class="da1 ta1 article-head">
<div class="eyebrow"><span class="wd-jnl-art-sur-title">PAPER</span><span> </span>•<span> </span><span class="offscreen-hidden">THE FOLLOWING ARTICLE IS</span><span class="red-text wd-jnl-art-collection-label">OPEN ACCESS</span></div>
<h4 class="wd-jnl-art-title" itemprop="headline">A review on how a Perpetual Motion Machine generates electrical power</h4>
<p class="mb-0"><span data-authors=""><span class="nowrap" itemprop="author" itemtype="http://schema.org/Person"><span itemprop="name">M N Hidayat</span><sup>1</sup></span>,<span> </span><span class="nowrap" itemprop="author" itemtype="http://schema.org/Person"><span itemprop="name">S P Chairandy</span><sup>1</sup></span><span> </span>and<span> </span><span class="nowrap" itemprop="author" itemtype="http://schema.org/Person"><span itemprop="name">F Ronilaya</span><sup>1</sup></span></span></p>
<p class="small" itemprop="isPartOf" itemscope="" itemtype="http://schema.org/PublicationIssue"><span class="wd-jnl-art-copyright" itemprop="copyrightHolder">Published under licence by IOP Publishing Ltd</span><br/><span class="wd-jnl-art-breadcrumb-title article-toolbar-anchor" itemid="periodical" itemscope="" itemtype="http://schema.org/Periodical"><span itemprop="name"><a class="event_breadcrumb" data-event-action="Title link" href="https://iopscience.iop.org/journal/1757-899X" itemprop="url">IOP Conference Series: Materials Science and Engineering</a></span></span>,<span> </span><span class="wd-jnl-art-breadcrumb-vol nowrap" itemprop="isPartOf" itemscope="" itemtype="http://schema.org/PublicationVolume"><span itemprop="volumeNumber"><a class="event_breadcrumb" data-event-action="Volume link" href="https://iopscience.iop.org/volume/1757-899X/1098" itemprop="url">Volume 1098</a></span></span>,<span> </span><span class="wd-jnl-art-breadcrumb-issue" itemprop="issueNumber"><a class="event_breadcrumb" data-event-action="Issue link" href="https://iopscience.iop.org/issue/1757-899X/1098/4" itemprop="url">Computer Science</a></span><span><strong>Citation</strong><span> </span>M N Hidayat<span> </span><em>et al</em><span> </span>2021<span> </span><em>IOP Conf. Ser.: Mater. Sci. Eng.</em><span> </span><b>1098</b><span> </span>042063</span><span><strong>DOI</strong><span> </span>10.1088/1757-899X/1098/4/042063</span></p>
<h4 class="collapse-blocked" id="artAbst">Abstract</h4>
<div class="article-text wd-jnl-art-abstract cf" itemprop="description">
<p>Electrical energy demand is increasing in accordance with rapid growth of the human population. Since fossil fuels is the most widely used energy source, thus it is depleting very fast. Alternative energy source is urgently needed to replace the use of conventional energy sources. Perpetual Motion Machine (PMM) which can be applied to produce electricity, may be an alternative solution for the problem the world is facing today. The machine is designed to generate power from repulsive forces of permanent magnet without utilizing external sources. Some researches had conducted experiments and Neodymium magnet is most used in the project due to its strong magnetic field. The device is mainly built using a permanent magnet, a rotating wheel and a generator. This paper reviews some aspects on how A Perpetual Motion Machine (PMM) generates electrical power. The aim of the paper is to provide a summary of the topic and its opportunities in further enhancements for better results. The study found that the concept is very effective, ecofriendly and less space needed. However, a larger scale development of the machine along with proper magnet and gear arrangement is currently needed for a better performance and application.</p>
<p><a href="https://iopscience.iop.org/article/10.1088/1757-899X/1098/4/042063/pdf">相關PDF</a></p>
</div>
</div>
</div>
<h2><span><span><span>PPT</span></span></span></h2>
<p><span><span><span><a href="https://nfuedu-my.sharepoint.com/:p:/g/personal/41123210_nfu_edu_tw/EeyVq9JGr5FMrLULV6SkgkoBNNk7RO70tRl-3lIktJqB1g?e=YHablg">循環繞圈.pptm</a></span></span></span></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_33_59.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_34_38.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_34_44.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_34_50.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_34_54.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_34_59.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_9 上午 06_45_52.png" width="800"/></p>
<p><img alt="" height="450" src="/images/PowerPoint 投影片放映 - [循環繞圈] 2023_11_8 下午 07_35_09.png" width="800"/></p>
<p>PPT中的組裝影片</p>
<p><a href="https://youtu.be/L4E_uMb7KL0">組裝影片</a></p>
<h1>零件繪製</h1>
<h2>循環系統</h2>
<p>零件一:底板</p>
<p><img alt="" height="431" src="/images/Autodesk Inventor Professional 2023 2023_11_9 上午 06_05_42.png" width="800"/></p>
<p>零件二:支撐桿x3</p>
<p><img alt="" height="465" src="/images/Autodesk Inventor Professional 2023 2023_11_9 上午 05_30_54.png" width="800"/></p>
<p>零件三:軌道</p>
<p><img alt="" height="445" src="/images/Autodesk Inventor Professional 2023 2023_11_9 上午 06_21_31.png" width="800"/></p>
<p>零件四:圓盤</p>
<p><img alt="" height="464" src="/images/Autodesk Inventor Professional 2023 2023_11_9 上午 05_26_22.png" width="800"/></p>
<h2>組裝過程</h2>
<p><img alt="" height="334" src="/images/1wpi0-23uxy.gif" width="785"/></p>
<h2>載點</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/41123210_nfu_edu_tw/Eo--a03GAfBIlrVefJqB3kEB6uYrlNp9PVDRI69cOvkd1g?e=K00oOk">循環系統-自用</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/41123210_nfu_edu_tw/EqeLnqt_bnhHsxDIAWPxfWwBOIPcN3AuEJnVf1Jkj5gB9Q?e=sNiPNJ">永動測驗</a></p>
<h1>W12</h1>
<h1>coppeliaSim </h1>
<h2>模型</h2>
<h3>未作動</h3>
<p><img alt="" height="417" src="/images/CoppeliaSim Edu - 1 - rendering_ 1 ms (7.94 fps) - SIMULATION SUSPENDED 2024_1_4 上午 04_16_21.png" width="800"/></p>
<p><img alt="" height="417" src="/images/CoppeliaSim Edu - 1 - rendering_ 1 ms (7.94 fps) - SIMULATION SUSPENDED 2024_1_4 上午 04_15_04.png" width="800"/></p>
<h3>作動</h3>
<p><img alt="" height="394" src="/images/45517106-7079-46e5-bfcb-71e350178353.gif" width="753"/></p>
<h1>檢討</h1>
<p>可能原因</p>
<p>1.在自己電腦中的IPV4或IPV6設定的不夠完善，導致城市不能完美執行。</p>
<p>2.自己在做法上有缺漏，導致雖然能讓感測線顯現出來，但無法給予球500N的力。</p>
<p>3.導入零件的質量過大，導致施力無法使球體移動。</p>
<p><img alt="" height="429" src="/images/project1_w14_simple.py - Visual Studio Code 2024_1_16 下午 03_05_40.png" width="800"/></p>
<p></p>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>